body {
    margin: 0;
    overflow: hidden; /* Prevent scrollbars */
    background-image: url('../image.jpg'); /* Relative path from css/ to image.jpg */
    background-size: cover;
    background-position: center;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Courier New', Courier, monospace; /* Retro font */
}

#game-container {
    position: relative; /* Needed for absolute positioning of children */
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

#start-screen {
    text-align: center;
    position: relative; /* Context for absolute positioned button */
    width: 100%; /* Take full width of container */
    height: 100%; /* Take full height of container */
    display: flex; /* Use flexbox */
    flex-direction: column;
    justify-content: flex-start; /* Align content (title) to the top */
    align-items: flex-start; /* Align content (title) to the left */
    padding-left: 40px; /* Add some padding on the left */
    padding-top: 25vh; /* Position title ~75% up the screen */
    box-sizing: border-box; /* Include padding in width/height calculation */
}

#start-screen h1 {
    color: #0f0; /* Bright green console color */
    text-shadow: 0 0 8px #0f0; /* Green glow */
    font-size: 3em;
   /* margin-bottom: 50px; Removed margin as flexbox handles spacing/positioning now */
   position: relative; /* Ensure title is above the button if overlapping */
   z-index: 1;
   margin-bottom: 20px; /* Add space between title and button */
   animation: flicker 10s infinite both; /* Add flicker to title */
}


#start-button {
    position: absolute;
    bottom: 80px;
    left: 60px;
    font-size: 3em;
    color: #0f0;
    background-color: transparent;
    border: none;
    cursor: pointer;
    font-family: inherit;
    padding: 0;
    text-shadow: 0 0 8px #0f0;
    z-index: 2;
    letter-spacing: 1px;
    display: flex;
    align-items: center;
}

/* Remove before pseudo-element that was adding the prefix */
#start-button::before {
    content: none;
}

/* Move terminal cursor to after text */
#start-button::after {
    content: '';
    margin-left: 10px;
    display: inline-block;
    width: 0.7em;
    height: 1em;
    background-color: #0f0;
    opacity: 1;
    vertical-align: middle;
    box-shadow: 0 0 8px rgba(0, 255, 0, 0.8);
    animation: 
        terminalBlink 1s step-end infinite,
        terminalGlow 4s ease-in-out infinite alternate;
    position: relative;
    top: -2px;
}

/* Enhanced blinking cursor animation */
@keyframes terminalBlink {
    0%, 49% { opacity: 1; }
    50%, 100% { opacity: 0; }
}

/* Subtle glow animation for the terminal cursor */
@keyframes terminalGlow {
    0% {
        box-shadow: 0 0 8px rgba(0, 255, 0, 0.8);
    }
    50% {
        box-shadow: 0 0 15px rgba(0, 255, 0, 1);
    }
    100% {
        box-shadow: 0 0 8px rgba(0, 255, 0, 0.8);
    }
}

/* Boot-up sequence animation when hovering */
#start-button:hover::after {
    animation: terminalPulse 0.5s linear infinite;
}

@keyframes terminalPulse {
    0%, 100% { 
        text-shadow: 0 0 10px #0f0, 0 0 20px #0f0;
        opacity: 1;
    }
    50% { 
        text-shadow: 0 0 8px #0f0;
        opacity: 0.8;
    }
}

/* Keyframes for glitchy/glowing animation REMOVED */
/* @keyframes glitch-glow { ... } */

/* Keyframe for blinking cursor */
@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
}

/* Hide other screens initially */
#video-player, #game-screen {
    display: none;
}

#video-player video {
    max-width: 90%;
    max-height: 80%;
}

#skip-video-button {
     margin-top: 20px;
     padding: 10px 20px;
     font-size: 1em;
     cursor: pointer;
     /* Add retro styling */
     font-family: 'Courier New', Courier, monospace;
     background-color: #ddd;
     color: #333;
     border: 2px solid #555;
}

/* Game Screen Styles */
#game-screen {
    width: 100%;
    height: 100%;
    position: relative;
}

#game-video-container {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
}

#game-video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    transition: filter 0.5s ease;
}

#game-ui-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 10;
    pointer-events: none; /* Allow clicks to pass through to video */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    box-sizing: border-box;
}

#stats-container {
    position: absolute; 
    top: 70%;
    left: 65%; 
    transform: translate(-50%, 0);
    width: 15%; 
    font-size: 1.1em; 
    text-align: right; 
    color: #ccc; /* Base color */
    text-shadow: 
        0 0 5px #ccc, /* Main glow */
        0 0 10px #fff, /* Subtle brighter glow */
        0 0 15px #0f0; /* Hint of green */
    pointer-events: auto;
    animation: none; /* Explicitly remove animation */
}

.stat-item {
    margin-bottom: 8px; 
    display: block; 
}

/* Add specific IDs or use nth-child for positioning */
#energy-value-item {
    transform: translateY(-8px); /* Increased negative value from -4px */
}

#boredom-value-item {
    transform: translateY(4px); /* Move Boredom Down */
}

.stat-bar-container {
    display: none;
}

#miles-value {
    font-size: 1em;
    /* font-weight: normal; */ /* Removed - inherit from container */
}

#energy-value,
#boredom-value {
    font-weight: bold;
}

#mile-marker {
    display: none;
}

#action-container {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: auto; /* Push to bottom */
    pointer-events: auto; /* Make buttons clickable */
}

#brake-check-button, #blast-button {
    padding: 15px 30px;
    font-size: 1.5em;
    font-family: 'Courier New', monospace;
    background-color: rgba(0, 0, 0, 0.7);
    color: #0f0;
    border: 2px solid #0f0;
    border-radius: 5px;
    cursor: pointer;
    text-shadow: 0 0 5px #0f0;
    transition: all 0.2s ease;
}

#brake-check-button:hover, #blast-button:hover {
    background-color: rgba(0, 30, 0, 0.8);
    box-shadow: 0 0 15px #0f0;
}

#brake-check-button.cooldown {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
}

#blast-button {
    background-color: rgba(30, 0, 0, 0.7);
    color: #f00;
    border-color: #f00;
    text-shadow: 0 0 5px #f00;
}

#blast-button:hover {
    background-color: rgba(50, 0, 0, 0.8);
    box-shadow: 0 0 15px #f00;
}

/* Brake Check Cooldown Timer */
.brake-cooldown-container {
    position: absolute;
    top: -15px;
    right: -15px;
    width: 30px;
    height: 30px;
    z-index: 20;
}

.brake-cooldown-timer {
    width: 100%;
    height: 100%;
    position: relative;
}

.brake-cooldown-spinner {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: conic-gradient(transparent 0%, #0f0 0%);
    box-shadow: 0 0 10px rgba(0, 255, 0, 0.7);
    transition: background 0.05s linear;
}

.brake-cooldown-mask {
    width: 80%;
    height: 80%;
    position: absolute;
    top: 10%;
    left: 10%;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.7);
    box-shadow: 0 0 5px rgba(0, 255, 0, 0.3) inset;
}

.hidden {
    display: none !important;
}

/* Remove Brake Check Effect Overlay Styles */
/*
#brake-effect-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3); 
    z-index: 5;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: opacity 0.5s ease;
}
*/

#brake-button-wrapper {
    position: relative; /* Context for positioning the pie timer */
    display: inline-block; /* Keep it inline with other buttons */
}

/* Pie Timer Styles */
#pie-timer {
    width: 30px; /* Make timer smaller */
    height: 30px;
    position: absolute;
    top: -10px; /* Position above the button */
    right: -10px; /* Position to the right of the button */
    z-index: 15; /* Ensure it's above the button */
    pointer-events: none; /* Don't block button clicks */
}

#pie-timer-spinner, 
#pie-timer-filler, 
#pie-timer-mask {
    width: 100%;
    height: 100%;
    position: absolute;
    border-radius: 50%;
}

#pie-timer-spinner {
    background: conic-gradient(#0f0 0%, rgba(0, 0, 0, 0.3) 0%);
    transition: background 0.1s linear;
}

#pie-timer-filler {
    background-color: rgba(0, 0, 0, 0.3);
    opacity: 0;
}

#pie-timer-mask {
    /* Adjust mask for smaller size */
    background: radial-gradient(transparent 0%, transparent 50%, #0f0 50%, #0f0 100%); 
    opacity: 0.7;
}

@keyframes vibrate {
    0% { transform: translate(-50%, 0) rotate(0deg); }
    25% { transform: translate(-49%, 0.5px) rotate(0.1deg); }
    50% { transform: translate(-51%, -0.5px) rotate(-0.1deg); }
    75% { transform: translate(-49.5%, 0.5px) rotate(0.1deg); }
    100% { transform: translate(-50%, 0) rotate(0deg); }
}

/* Fullscreen Prompt Styles */
#fullscreen-prompt {
    position: fixed; /* Cover entire viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9); /* Dark semi-transparent background */
    color: #fff;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Ensure it's on top */
    text-align: center;
    font-family: 'Courier New', Courier, monospace;
}

#fullscreen-prompt p {
    font-size: 1.5em;
    margin-bottom: 20px;
    color: #0f0;
    text-shadow: 0 0 8px #0f0;
}

#enter-fullscreen-button {
    padding: 15px 30px;
    font-size: 1.2em;
    color: #0f0;
    background-color: transparent;
    border: 2px solid #0f0;
    cursor: pointer;
    font-family: inherit;
    text-shadow: 0 0 8px #0f0;
    transition: all 0.2s ease;
}

#enter-fullscreen-button:hover {
    background-color: rgba(0, 255, 0, 0.1);
    box-shadow: 0 0 15px #0f0;
}

/* Subtle Glitch Effect */
@keyframes subtleGlitch {
  0%, 100% {
    transform: translateX(0);
    text-shadow: 
        0 0 8px #0f0, /* Base green glow */
        1px 1px 1px rgba(255, 0, 0, 0.5), /* Red offset */
        -1px -1px 1px rgba(0, 0, 255, 0.5); /* Blue offset */

  }
  49% {
    transform: translateX(0);
     text-shadow: 
        0 0 8px #0f0,
        1px 1px 1px rgba(255, 0, 0, 0.5),
        -1px -1px 1px rgba(0, 0, 255, 0.5);
  }
  50% {
    transform: translateX(-1px);
     text-shadow: 
        0 0 8px #0f0,
        -1px 1px 1px rgba(255, 0, 0, 0.5),
        1px -1px 1px rgba(0, 0, 255, 0.5);
  }
  51% {
    transform: translateX(1px);
     text-shadow: 
        0 0 8px #0f0,
        2px -1px 1px rgba(255, 0, 0, 0.5),
        -2px 1px 1px rgba(0, 0, 255, 0.5);
  }
  52% {
     transform: translateX(0);
      text-shadow: 
        0 0 8px #0f0,
        1px 1px 1px rgba(255, 0, 0, 0.5),
        -1px -1px 1px rgba(0, 0, 255, 0.5);
  }
}

.glitch-container .glitch-effect {
    /* Apply the base glow */
    color: #0f0;
    text-shadow: 0 0 8px #0f0;
    animation: subtleGlitch 5s infinite step-end; /* Apply glitch animation */
    position: relative; /* Needed for potential ::before/::after if we used them */
}

/* Stagger animation slightly for button */
#start-screen #start-button.glitch-effect {
    animation-delay: 0.1s;
}

/* Override text-shadow specifically for start button which had its own */
#start-button.glitch-effect {
     text-shadow: 
        0 0 8px #0f0,
        1px 1px 1px rgba(255, 0, 0, 0.5),
        -1px -1px 1px rgba(0, 0, 255, 0.5);
}

#start-button.glitch-effect:hover {
    /* Ensure hover maintains a similar shadow structure */
     text-shadow: 0 0 12px #0f0, 0 0 20px #0f0, 
                  1px 1px 1px rgba(255, 0, 0, 0.5), 
                  -1px -1px 1px rgba(0, 0, 255, 0.5);
}

/* Ensure stats container doesn't get the glitch */
#stats-container {
    /* ... existing styles ... */
    animation: none; /* Explicitly remove animation */
    text-shadow: 
        0 0 5px #ccc, 
        0 0 10px #fff, 
        0 0 15px #0f0; /* Restore original glow */
}

.hidden {
    display: none !important;
}

/* Replace dynamic particles with static stars */
.particle {
    display: none; /* Hide old particles */
}

.star {
    position: absolute;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.7);
    box-shadow: 0 0 4px 1px rgba(255, 255, 255, 0.3);
    pointer-events: none;
    z-index: 1;
    animation: starGlow 3s ease-in-out infinite alternate;
}

@keyframes starGlow {
    0% {
        opacity: 0.05;
    }
    50% {
        opacity: 0.05;
    }
    100% {
        opacity: 0.2;
    }
}

/* Enhanced glitch effects */
@keyframes textShadowPulse {
    0% {
        text-shadow: 
            0 0 5px #0f0,
            1px 1px 5px rgba(0, 255, 0, 0.5);
    }
    25% {
        text-shadow: 
            -1px -1px 5px #0f0,
            1px -1px 10px rgba(255, 0, 0, 0.3),
            -1px 1px 5px rgba(0, 100, 255, 0.5);
    }
    50% {
        text-shadow: 
            1px -1px 8px #0f0,
            -1px 1px 5px rgba(0, 255, 0, 0.5),
            2px 2px 15px rgba(255, 0, 0, 0.3);
    }
    75% {
        text-shadow: 
            -1px 1px 15px #0f0,
            1px -1px 5px rgba(0, 255, 0, 0.5),
            0px 0px 10px rgba(0, 100, 255, 0.7);
    }
    100% {
        text-shadow: 
            0 0 5px #0f0,
            1px 1px 5px rgba(0, 255, 0, 0.5);
    }
}

@keyframes glitchText {
    0%, 100% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    5% {
        clip-path: inset(10% 0 80% 0);
        transform: translateX(-2px);
    }
    10% {
        clip-path: inset(30% 0 50% 0);
        transform: translateX(2px);
    }
    15% {
        clip-path: inset(80% 0 5% 0);
        transform: translateX(-2px);
    }
    20% {
        clip-path: inset(40% 0 32% 0);
        transform: translateX(2px);
    }
    25% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    30% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    32% {
        clip-path: inset(65% 0 15% 0);
        transform: translateX(-2px);
    }
    35% {
        clip-path: inset(25% 0 45% 0);
        transform: translateX(3px);
    }
    37% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    69% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    70.5% {
        clip-path: inset(80% 0 15% 0);
        transform: translateX(1px);
    }
    72% {
        clip-path: inset(10% 0 60% 0);
        transform: translateX(-2px);
    }
    73% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
}

@keyframes glitchTextAfter {
    0%, 100% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    6% {
        clip-path: inset(15% 0 70% 0);
        transform: translateX(2px);
    }
    11% {
        clip-path: inset(25% 0 60% 0);
        transform: translateX(-2px);
    }
    16% {
        clip-path: inset(85% 0 10% 0);
        transform: translateX(2px);
    }
    21% {
        clip-path: inset(35% 0 45% 0);
        transform: translateX(-2px);
    }
    26% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    31% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    33% {
        clip-path: inset(75% 0 5% 0);
        transform: translateX(2px);
    }
    36% {
        clip-path: inset(15% 0 65% 0);
        transform: translateX(-2px);
    }
    38% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    70% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
    71.5% {
        clip-path: inset(65% 0 25% 0);
        transform: translateX(-1px);
    }
    73% {
        clip-path: inset(5% 0 75% 0);
        transform: translateX(2px);
    }
    74% {
        clip-path: inset(0 0 0 0);
        transform: translateX(0);
    }
}

.glitch-container .glitch-effect {
    position: relative;
    color: #0f0;
    animation: textShadowPulse 8s infinite linear;
}

.glitch-container .glitch-effect::before,
.glitch-container .glitch-effect::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
}

.glitch-container .glitch-effect::before {
    left: 1px;
    text-shadow: -1px 0 red;
    animation: glitchText 4s infinite linear alternate-reverse;
}

.glitch-container .glitch-effect::after {
    left: -1px;
    text-shadow: 1px 0 blue;
    animation: glitchTextAfter 4.1s infinite linear alternate-reverse;
}

/* Stagger animation slightly for button to make them out of sync */
#start-screen #start-button.glitch-effect::before {
    animation-delay: 0.2s;
}

#start-screen #start-button.glitch-effect::after {
    animation-delay: 0.3s;
}

/* Phantom effect - random flickers */
@keyframes flicker {
    0%, 100% { opacity: 1; }
    41% { opacity: 1; }
    42% { opacity: 0.8; }
    43% { opacity: 1; }
    45% { opacity: 0.3; }
    46% { opacity: 1; }
    89% { opacity: 1; }
    90% { opacity: 0.9; }
    91% { opacity: 1; }
    92% { opacity: 0.7; }
    93% { opacity: 1; }
}

/* Override button hover state to maintain glitch */
#start-button:hover::before,
#start-button:hover::after {
    opacity: 1; /* Keep glitch visible on hover */
}

/* Stats container should stay clean */
#stats-container {
    animation: none !important; /* No animation */
}

/* CRT Scanline effect */
@keyframes scanlines {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 0 100%;
    }
}

#game-container::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        to bottom,
        rgba(0, 0, 0, 0) 50%,
        rgba(0, 0, 0, 0.05) 50%
    );
    background-size: 100% 4px;
    z-index: 999;
    pointer-events: none;
    opacity: 0.3;
    mix-blend-mode: overlay;
    animation: scanlines 8s linear infinite;
}

/* Add scanlines to the start screen title with a blending effect */
#start-screen h1::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
        0deg,
        rgba(0, 255, 0, 0.15), 
        rgba(0, 255, 0, 0.15) 1px,
        transparent 1px,
        transparent 2px
    );
    pointer-events: none;
    z-index: 1;
}

/* Vignette effect around the edges of the screen */
body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
        circle at center,
        transparent 60%,
        rgba(0, 0, 0, 0.6) 100%
    );
    pointer-events: none;
    z-index: 998;
}

/* Shake Animation */
@keyframes shake {
  0% { transform: translate(0.5px, 0.5px) rotate(0.2deg); }
  10% { transform: translate(-0.5px, -0.5px) rotate(-0.2deg); }
  20% { transform: translate(-1px, 0px) rotate(0.2deg); }
  30% { transform: translate(1px, 0.5px) rotate(0deg); }
  40% { transform: translate(0.5px, -0.5px) rotate(0.2deg); }
  50% { transform: translate(-0.5px, 0.5px) rotate(-0.2deg); }
  60% { transform: translate(-1px, 0.5px) rotate(0deg); }
  70% { transform: translate(1px, 0px) rotate(-0.2deg); }
  80% { transform: translate(-0.5px, -0.5px) rotate(0.2deg); }
  90% { transform: translate(0.5px, 0.5px) rotate(0deg); }
  100% { transform: translate(0.5px, -0.5px) rotate(-0.2deg); }
}

/* Intense Shake Animation for initial cutscene */
@keyframes intenseShake {
  0% { transform: translate(1.5px, 2px) rotate(0.8deg); }
  10% { transform: translate(-2px, -1.5px) rotate(-1deg); }
  20% { transform: translate(-3px, 0.5px) rotate(0.7deg); }
  30% { transform: translate(2.5px, 1px) rotate(-0.5deg); }
  40% { transform: translate(1.5px, -2px) rotate(0.8deg); }
  50% { transform: translate(-2px, 1.5px) rotate(-1deg); }
  60% { transform: translate(-2.5px, 1px) rotate(0.5deg); }
  70% { transform: translate(2px, 0.5px) rotate(-0.7deg); }
  80% { transform: translate(-1.5px, -1.5px) rotate(0.9deg); }
  90% { transform: translate(1.5px, 2px) rotate(-0.5deg); }
  100% { transform: translate(2px, -1.5px) rotate(-0.8deg); }
}

.shake {
  animation: shake 0.1s infinite; /* Faster frequency, shorter duration */
}

.intense-shake {
  animation: intenseShake 0.05s infinite; /* Even faster, more intense */
}

/* Epilepsy Warning Styles */
#epilepsy-warning {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.95); /* Very dark background */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10000; /* On top of everything */
    font-family: 'Courier New', Courier, monospace;
}

#epilepsy-warning p {
    color: #f00; /* Bright red */
    font-size: 2em;
    text-align: center;
    padding: 20px;
    text-shadow: 
        0 0 10px #f00, 
        0 0 20px #f00, 
        0 0 30px #f66, 
        0 0 40px #f66; /* Intense red glow */
    animation: warningPulse 1s infinite alternate;
    max-width: 80%;
}

@keyframes warningPulse {
    from {
        text-shadow: 
            0 0 10px #f00, 
            0 0 20px #f00, 
            0 0 30px #f66, 
            0 0 40px #f66;
    }
    to {
        text-shadow: 
            0 0 15px #f00, 
            0 0 25px #f00, 
            0 0 35px #f66, 
            0 0 50px #f66;
    }
}

/* Degauss Effect (CRT-like magnetic distortion) */
@keyframes degauss {
  0% { 
    opacity: 0.4;
    filter: brightness(1) contrast(1) hue-rotate(0deg);
    transform: scale(1);
  }
  5% { 
    opacity: 0.6;
    filter: brightness(1.2) contrast(1.3) hue-rotate(2deg);
    transform: scale(1.01);
  }
  15% { 
    opacity: 0.5;
    filter: brightness(0.9) contrast(1.1) hue-rotate(-1deg);
    transform: scale(1.005) skew(0.2deg, 0.1deg);
  }
  30% { 
    opacity: 0.3;
    filter: brightness(1.1) contrast(1.05) hue-rotate(0.5deg);
    transform: scale(1.003) skew(-0.1deg, 0.05deg);
  }
  50% { 
    opacity: 0.2;
    filter: brightness(1.05) contrast(1.02) hue-rotate(0deg);
    transform: scale(1.002);
  }
  100% { 
    opacity: 0;
    filter: brightness(1) contrast(1) hue-rotate(0deg);
    transform: scale(1);
  }
}

#degauss-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(ellipse at center, rgba(255,255,255,0.7) 0%, rgba(200,200,255,0.4) 20%, rgba(100,100,255,0.3) 40%, rgba(30,0,90,0.2) 60%, transparent 70%);
  mix-blend-mode: screen;
  pointer-events: none;
  z-index: 500;
  opacity: 0;
}

.degauss {
  animation: degauss 1.2s ease-out forwards;
}

/* Look Back Video */
#look-back-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 5; /* Above main video, below UI/degauss */
    display: none; /* Hidden by default */
}

/* Look Back Button */
#look-back-button {
    padding: 10px 20px; /* Reduced horizontal padding to work better with width changes */
    font-size: 1.5em;
    font-family: 'Courier New', monospace;
    background-color: rgba(0, 0, 0, 0.7); /* Copied from brake-check */
    color: #0f0; /* Copied from brake-check */
    border: 2px solid #0f0; /* Copied from brake-check */
    border-radius: 5px;
    cursor: pointer;
    text-shadow: 0 0 5px #0f0; /* Copied from brake-check */
    transition: all 0.2s ease; /* Copied from brake-check */
    position: relative; 
    line-height: 1;
    /* Added min-width to keep it reasonable when not expanded */
    min-width: 100px;
    /* Removed gradient, specific border, box-shadow from previous style */
}

#look-back-button:hover {
    background-color: rgba(0, 30, 0, 0.8); /* Copied from brake-check hover */
    box-shadow: 0 0 15px #0f0; /* Copied from brake-check hover */
    /* Removed specific border/color changes from previous style */
    color: #0f0; /* Ensure color stays green on hover */
    text-shadow: 0 0 8px #0f0; /* Slightly stronger shadow on hover */
}

/* Bright Flash Effect */
@keyframes brightFlash {
  0%, 100% { filter: brightness(2.5); }
  25% { filter: brightness(4.0); }
  50% { filter: brightness(2.0); }
  75% { filter: brightness(3.5); }
}

.bright-flash-effect {
    animation: brightFlash 0.4s linear infinite;
}

/* Red Flash Effect for second event */
@keyframes redFlash {
  0%, 100% { filter: brightness(1.5) sepia(0.3) hue-rotate(300deg); }
  25% { filter: brightness(2.0) sepia(0.5) hue-rotate(320deg); }
  50% { filter: brightness(1.3) sepia(0.7) hue-rotate(340deg); }
  75% { filter: brightness(1.8) sepia(0.6) hue-rotate(310deg); }
}

.red-flash-effect {
    animation: redFlash 0.3s linear infinite;
}

/* Horror Flash Effect for third event */
@keyframes horrorFlash {
  0%, 100% { filter: brightness(3.0) contrast(1.5) saturate(1.2) hue-rotate(10deg); }
  25% { filter: brightness(4.0) contrast(2.0) saturate(0.8) hue-rotate(-5deg); }
  50% { filter: brightness(2.5) contrast(1.8) saturate(1.5) hue-rotate(15deg); }
  75% { filter: brightness(3.5) contrast(1.2) saturate(0.6) hue-rotate(-10deg); }
}

.horror-flash-effect {
    animation: horrorFlash 0.15s linear infinite;
}

/* Markiplier Beam Button */
#markiplier-beam-button {
    padding: 15px 30px;
    font-size: 1.5em;
    font-family: 'Courier New', monospace;
    background-color: rgba(30, 0, 40, 0.8);
    color: #f0f;
    border: 2px solid #f0f;
    border-radius: 5px;
    cursor: pointer;
    text-shadow: 0 0 5px #f0f;
    transition: all 0.2s ease;
    animation: beamPulse 0.5s infinite alternate;
}

#markiplier-beam-button:hover {
    background-color: rgba(60, 0, 80, 0.9);
    box-shadow: 0 0 20px #f0f;
}

@keyframes beamPulse {
    0% { box-shadow: 0 0 10px #f0f, 0 0 20px #f0f; }
    100% { box-shadow: 0 0 15px #f0f, 0 0 30px #f0f, 0 0 40px #f0f; }
}

/* White Fade Overlay */
#white-fade-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0);
    z-index: 9000;
    pointer-events: none;
    transition: background-color 1.5s ease;
}

#white-fade-overlay.fade-active {
    background-color: rgba(255, 255, 255, 1);
}

/* Command Line Interface Styles */
#cli-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Courier New', Courier, monospace;
    z-index: 9500; /* Above white fade */
    opacity: 0;
    transition: opacity 1s ease;
}

#cli-container.visible {
    opacity: 1;
}

#cli-content {
    width: 80%;
    max-width: 800px;
    display: flex;
    flex-wrap: wrap;
}

#cli-text {
    color: #0f0;
    font-size: 1.5em;
    margin-right: 5px;
    text-shadow: 0 0 5px #0f0;
}

#cli-cursor {
    color: #0f0;
    font-size: 1.5em;
    animation: cursor-blink 0.8s infinite;
    text-shadow: 0 0 5px #0f0;
}

@keyframes cursor-blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
}

/* CLI Loading Animation */
.loading-animation {
    display: block;
    margin-top: 10px;
    font-family: 'Courier New', Courier, monospace;
    color: #0f0;
    text-shadow: 0 0 5px #0f0;
}

@keyframes progress-bar {
    0% { width: 0; }
    100% { width: 100%; }
}

.progress-bar {
    height: 10px;
    background-color: #0f0;
    margin-top: 10px;
    box-shadow: 0 0 10px #0f0;
    animation: progress-bar 3s linear;
    width: 0;
}